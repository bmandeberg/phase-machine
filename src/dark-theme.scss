@import './sass-globals.scss';
$darkBackground: #090c10;
$darkMuteBackground: #1c1c23;
$darkMediumGray: #45454c;
$darkMediumGrayHover: lighten($darkMediumGray, 3%);
$darkMediumGrayActive: darken($darkMediumGray, 3%);
$darkDarkGray: #1e1e25;
$darkDarkGrayHover: lighten($darkDarkGray, 5%);
$darkLightGray: #a0a0b4;
$darkGreen: #00c591;
$darkGreenHover: lighten($darkGreen, 6%);
$darkGreenActive: darken($darkGreen, 5%);
$darkDarkGreen: darken($darkGreen, 10%);
$darkestGreen: darken($darkGreen, 30%);
$darkDarkOrange: #9e5302;
$splitButtonAction: #313139;
$headerBlue: #17326d;
$headerBlueHover: lighten($headerBlue, 5%);
$headerBlueActive: darken($headerBlue, 3%);
$headerDarkBlue: #0f182d;

.dark-theme {
  background-color: $darkBackground;
  color: $darkLightGray;

  textarea {
    background-color: $darkDarkGray;
    color: $darkLightGray;
    border: 1px solid $darkMediumGray;
    box-shadow: inset 1px 1px 1px 1px rgba(0, 0, 0, 0.2);
  }

  input {
    background-color: $darkDarkGray;
    color: $darkLightGray;
    border: 1px solid $darkMediumGray;
    box-shadow: inset 1px 1px 1px 1px rgba(0, 0, 0, 0.2);
  }

  .button {
    background-color: $darkMediumGray;
    color: $darkLightGray;
    &:hover {
      background-color: $darkMediumGrayHover;
    }
    &:active {
      background-color: $darkMediumGrayActive;
    }
    &.green-button {
      background-color: $darkGreen;
      color: $darkBackground;
      &:hover {
        background-color: $darkGreenHover;
      }
      &:active {
        background-color: $darkGreenActive;
      }
    }
    &.red-button {
      color: $darkBackground;
    }
  }

  .mute-solo {
    .button {
      background-color: $darkMediumGray;
      &:hover {
        background-color: $darkMediumGrayHover;
      }
    }
    .mute {
      &.muted {
        color: $darkBackground;
        background: $red;
        &:hover {
          background: $redHover;
        }
      }
    }
    .solo {
      &.soloed {
        color: $darkBackground;
        background: $darkGreen;
        &:hover {
          background: $darkGreenHover;
        }
      }
    }
  }

  .midi {
    .midi-in {
      background-color: $splitButtonAction;
      &:hover {
        background-color: lighten($splitButtonAction, 3%);
      }
      &:active {
        background-color: darken($splitButtonAction, 3%);
      }
      &.midi-active {
        background-color: $darkGreen;
        color: $darkBackground;
        &:hover {
          background-color: $darkGreenHover;
        }
      }
    }
  }

  .midi-modal {
    .channel-num {
      color: $darkGreen;
    }
  }

  .instrument-modal {
    .controls-row,
    .controls-module {
      border-color: $darkMediumGray;
    }
    .controls-label {
      color: lighten($darkMediumGray, 10%);
    }
  }

  .about-section {
    border-color: $darkMediumGray;
    .about-section-title {
      color: $lightGray;
    }
    .about-section-text {
      a,
      a:hover,
      a:visited {
        color: $darkLightGray;
      }
    }
    .about-section-warning-container {
      .about-section-warning {
        background-color: darken($red, 50%);
        color: lighten($red, 20%);
        .about-section-warning-icon {
          background: transparent url('./assets/alert.png') center center;
          background-size: auto 20px;
        }
      }
    }
    .about-section-tip-container {
      .about-section-tip {
        background-color: darken($green, 40%);
        color: #87ff69;
        .about-section-tip-icon {
          background: transparent url('./assets/lightbulb.png') center center;
          background-size: auto 20px;
        }
        .about-section-tip-content {
          a,
          a:hover,
          a:visited {
            color: #87ff69;
          }
        }
      }
    }
  }

  .switch-label {
    &.selected {
      color: $darkGreen;
    }
  }

  .border {
    border-color: $darkMediumGray;
  }

  .channel-horizontal {
    border-color: $darkMediumGray;
    .channel-number-background {
      background: linear-gradient(to right, rgba(9, 12, 16, 1) 5%, rgba(9, 12, 16, 0));
      height: 100%;
    }
    .channel-number {
      text-shadow: 0 0 5px $darkBackground;
    }
    &.channel-in-active {
      background-color: $darkestGreen;
      .channel-horizontal {
        background-color: $darkestGreen;
      }
    }
  }

  .duplicate-delete {
    div {
      background-color: transparent;
    }
    .duplicate {
      background-image: url('./assets/plus-icon-gray-dark.png');
      background-size: 13px;
      &.mute {
        background-image: url('./assets/plus-icon-dark-gray-dark.png');
        background-size: 13px;
      }
      &:hover {
        background-image: url('./assets/plus-icon-green-dark.png');
        background-size: 13px;
      }
    }
    .delete {
      background-image: url('./assets/trash-icon-gray-dark.png');
      background-size: 13px 14px;
      &.mute {
        background-image: url('./assets/trash-icon-dark-gray-dark.png');
        background-size: 13px 14px;
      }
      &:hover {
        background-image: url('./assets/trash-icon-red.png');
        background-size: 13px 14px;
      }
    }
  }

  .key {
    &.piano-keys {
      .pitch-class {
        background-color: $darkDarkGray;
        border: 2px solid $darkBackground;
        border-top: none;
        &.mute {
          border-color: $darkMuteBackground;
        }
        &:hover {
          background-color: $darkDarkGrayHover;
        }
        &.white-key {
          background-color: $darkMediumGray;
          border-right: none;
          border-bottom: none;
          &:hover {
            background-color: $darkMediumGrayHover;
          }
        }
      }
    }
    &.clock {
      .pitch-class {
        background-color: $darkMediumGray;
        &:hover {
          background-color: $darkMediumGrayHover;
        }
      }
    }
    .pitch-class {
      cursor: pointer;
      border-style: solid;
      border-color: $pink;
      border-width: 0;
      transition: border-width $transitionTime / 4, border-color $transitionTime / 2,
        background-color $transitionTime / 4;
      &.selected {
        background-color: $darkGreen !important;
        &:hover {
          background-color: $darkGreenHover !important;
        }
      }
      &.playing {
        background-color: $orangeHover !important;
        &:hover {
          background-color: $orangeHover !important;
        }
      }
      &.previewed {
        border-width: 5px;
      }
    }
  }

  .react-numeric-input {
    input {
      background-color: $darkDarkGray;
      color: $darkLightGray;
      border: 1px solid $darkMediumGray;
      box-shadow: inset 1px 1px 1px 1px rgba(0, 0, 0, 0.2);
    }
    b {
      border-color: $darkMediumGray;
      background-color: $darkMediumGray;
      &:hover {
        background-color: $darkMediumGrayHover;
      }
      &:active {
        background-color: $darkMediumGrayActive;
      }
    }
    b:first-of-type {
      border-bottom-color: $darkMuteBackground;
      i {
        border-color: transparent transparent $darkLightGray;
      }
    }
    b:last-of-type {
      i {
        border-color: $darkLightGray transparent transparent;
      }
    }
  }

  .num-input.small-input {
    input {
      background-color: $darkBackground;
      border: 1px solid $headerBlue;
    }
    b {
      border-color: $headerBlue;
      background: $headerBlue;
      &:hover {
        background: $headerBlueHover;
      }
      &:active {
        background-color: $headerBlueActive;
      }
    }
    b:first-of-type {
      border-bottom-color: $headerDarkBlue;
      i {
        border-color: transparent transparent $blue;
      }
    }
    b:last-of-type {
      i {
        border-color: $blue transparent transparent;
      }
    }
  }

  #header {
    background-color: $headerDarkBlue;
    color: $blue;
    .header-aux {
      .header-settings {
        background: url('./assets/gear-blue.png');
        background-size: 22px;
        &:hover {
          background: url('./assets/gear-hover-blue.png');
          background-size: 22px;
        }
      }
      .header-about {
        background: url('./assets/question-blue.png');
        background-size: 22px;
        &:hover {
          background: url('./assets/question-blue-hover.png');
          background-size: 22px;
        }
      }
    }
  }
  #header-border {
    background-color: #101d38;
  }

  .radio-buttons {
    .radio-button {
      border: 1px solid $headerBlue;
      color: $blue;
      background-color: $headerBlue;
      &:hover {
        background-color: $headerBlueHover;
      }
      &:active {
        background-color: $headerBlueActive;
      }
      &.radio-button-selected {
        background-color: $darkGreen;
        border: 1px solid $darkGreen;
        color: $headerDarkBlue;
      }
    }
  }

  .piano {
    $inRangeColor: #787887;
    $inRangeColorHover: lighten($inRangeColor, 5%);
    $inRangeBorderColor: #3c3c3c;
    .piano-note {
      background-color: #26262f;
      border-color: $darkBackground;
      &.in-range {
        background-color: $darkDarkGray;
        border-color: transparent;
      }
      &.interactive:hover {
        background-color: $darkDarkGrayHover;
        &.mute {
          background-color: lighten($darkDarkGrayHover, 3%);
        }
      }
      &.white-key {
        background-color: $darkMediumGray;
        &.in-range {
          background-color: $inRangeColor;
          border-color: $inRangeBorderColor;
          &.selected {
            background-color: $darkGreen;
          }
        }
        &.interactive:hover {
          background-color: $darkMediumGrayHover;
        }
      }
      &.selected {
        background-color: $darkGreen;
        &.interactive:hover {
          background-color: $darkGreenHover;
        }
      }
      &.playing,
      &.selected {
        &.white-key.in-range {
          border-color: $darkDarkGreen;
          &.next-black-key-near {
            &::before {
              border: 2px solid $inRangeColor;
              border-right: none;
              border-top: none;
            }
          }
          &.next-black-key-middle {
            &::after {
              border: 2px solid $inRangeColor;
              border-right: none;
              border-top: none;
            }
          }
          &.next-black-key-far {
            &::after {
              border: 2px solid $inRangeColor;
              border-right: none;
              border-top: none;
            }
          }
          &.prev-black-key-near {
            &::before {
              border: 2px solid $inRangeColor;
              border-left: none;
              border-top: none;
            }
          }
          &.prev-black-key-middle {
            &::before {
              border: 2px solid $inRangeColor;
              border-left: none;
              border-top: none;
            }
          }
          &.prev-black-key-far {
            &::before {
              border: 2px solid $inRangeColor;
              border-left: none;
              border-top: none;
            }
          }
          & + .piano-note.in-range {
            &::after {
              border: 2px solid $inRangeColor;
              border-right: none;
              border-left: none;
              border-top: none;
            }
            & + .white-key.in-range {
              border-left-color: $darkDarkGreen;
            }
          }
          & + .white-key.in-range {
            border-left-color: $darkDarkGreen;
          }
        }
      }
      &.playing {
        background-color: darken($orange, 2%);
        &.interactive:hover {
          background-color: $orangeHover;
        }
        &.white-key.in-range {
          border-color: $darkOrange;
          background-color: $orange;
          & + .piano-note.in-range {
            & + .white-key.in-range {
              border-left-color: $darkOrange;
            }
          }
          & + .white-key.in-range {
            border-left-color: $darkOrange;
          }
          &.interactive:hover {
            background-color: $orangeHover;
          }
        }
      }
    }
    .piano-range {
      path {
        stroke: $darkGreen;
      }
    }
    .piano-border {
      border-left: 2px solid $darkBackground;
      border-right: 2px solid $darkBackground;
    }
  }

  .notes-mode {
    .notes-mode-selected {
      color: $darkGreen;
    }
  }

  .multi-select {
    background-color: $darkMediumGray;
    border: 1px solid $darkMediumGray;
    color: $darkLightGray;

    .multi-select-placeholder {
      color: darken($darkLightGray, 7%);
    }

    .multi-select-arrow-container {
      border: 1px solid $darkMediumGray;
      border-left-color: $darkBackground;
      background-color: $darkMediumGray;
      &:hover {
        background-color: $darkMediumGrayHover;
      }
      &:active {
        background-color: $darkMediumGrayActive;
      }
    }

    .multi-select-arrow {
      border-color: $darkLightGray transparent transparent;
    }

    .multi-select-dropdown {
      background-color: $darkBackground;
      border: 1px solid $darkMediumGray;
    }

    .multi-select-option {
      color: $darkLightGray;
      &:hover {
        background-color: $darkGreen;
        color: $darkBackground;
      }
    }

    .multi-select-selection {
      background-color: $darkDarkGray;
      color: $darkLightGray;
      .multi-select-remove {
        &:before,
        &:after {
          background-color: $darkLightGray;
        }
        &:hover {
          &:before,
          &:after {
            background-color: $red;
          }
        }
      }
    }
  }

  .dropdown-root {
    &.open .dropdown-arrow {
      border-color: transparent transparent $darkLightGray !important;
    }
  }

  .dropdown-control {
    background-color: $darkMediumGray;
    border: 1px solid $darkMediumGray;
    color: $darkLightGray;
  }

  .dropdown-arrow-wrapper {
    border: 1px solid $darkMediumGray;
    border-left-color: $darkBackground;
    background-color: $darkMediumGray;
    &:hover {
      background-color: $darkMediumGrayHover;
    }
    &:active {
      background-color: $darkMediumGrayActive;
    }
  }

  .dropdown-arrow {
    border-color: $darkLightGray transparent transparent;
  }

  .dropdown-menu {
    background-color: $darkBackground;
    border: 1px solid $darkMediumGray;
  }

  .dropdown-menu .dropdown-group > .dropdown-title {
    color: $darkLightGray;
  }

  .dropdown-option {
    color: $darkLightGray;
  }

  .dropdown-option:hover,
  .dropdown-option.selected {
    background-color: $darkGreen;
    color: $darkBackground;
  }

  .dropdown-noresults {
    color: $darkLightGray;
  }

  .dropdown-container {
    &.small-dropdown {
      .dropdown-control {
        background-color: $headerBlue;
        border: 1px solid $headerBlue;
        color: $blue;
      }
      .dropdown-arrow-wrapper {
        border: 1px solid $headerBlue;
        border-left-color: $headerDarkBlue;
        background-color: $headerBlue;
        &:hover {
          background-color: $headerBlueHover;
        }
        &:active {
          background-color: $headerBlueActive;
        }
      }
      .dropdown-arrow {
        border-color: $blue transparent transparent;
      }
      .dropdown-root.open .dropdown-arrow {
        border-color: transparent transparent $blue !important;
      }
      .dropdown-menu {
        border: 1px solid $headerBlue;
      }
      .dropdown-option:hover,
      .dropdown-option.selected {
        background-color: $darkGreen;
        color: $darkBackground;
      }
    }
    &.dropdown-num-inputs-container {
      .dropdown-arrow-wrapper {
        z-index: 1;
      }
    }
    &.graphic-options {
      .dropdown-option {
        color: $darkLightGray;
        &:hover,
        &.selected {
          background-color: lighten($darkestGreen, 10%);
        }
      }
    }
  }

  .presets {
    border: 1px solid $headerBlue;
    background-color: $headerBlue;
    color: $blue;
    .preset-action {
      border-right-color: $headerDarkBlue;
      &:hover {
        background-color: $headerBlueHover;
      }
      &:active {
        background-color: $headerBlueActive;
      }
      &.disabled {
        background-color: #2a416b;
      }
    }
    input {
      background-color: $darkBackground;
      color: $darkLightGray;
    }
    .preset-hotkey {
      background-color: $blue;
      color: $darkBackground;
    }
    .dropdown-arrow-wrapper {
      border-left-color: $headerBlue !important;
    }
    .dropdown-control {
      border-right-color: $headerDarkBlue !important;
    }
  }

  .split-button {
    background-color: $darkMediumGray;
    .split-button-action,
    .split-button-content {
      &:hover {
        background-color: $darkMediumGrayHover;
      }
      &:active {
        background-color: $darkMediumGrayActive;
      }
    }
    .split-button-arrow {
      background-color: $splitButtonAction;
      &:hover {
        background-color: lighten($splitButtonAction, 3%);
      }
      &:active {
        background-color: darken($splitButtonAction, 3%);
      }
      &.split-button-arrow-left {
        border-right: 1px solid $darkBackground;
        &::before {
          border-color: transparent $darkLightGray transparent transparent;
        }
      }
      &.split-button-arrow-right {
        &::before {
          border-color: transparent transparent transparent $darkLightGray;
        }
      }
    }
  }

  .split-button-container {
    &.small-split-button {
      .split-button {
        border: 1px solid $headerBlue;
        background-color: $headerBlue;
        color: $blue;
        .split-button-action {
          border-right: 1px solid $headerDarkBlue;
          &:hover {
            background-color: $headerBlueHover;
          }
          &:active {
            background-color: $headerBlueActive;
          }
        }
        .split-button-arrow {
          background-color: $headerBlue;
          &.split-button-arrow-left {
            &::before {
              border-color: transparent $blue transparent transparent;
            }
          }
          &.split-button-arrow-right {
            &::before {
              border-color: transparent transparent transparent $blue;
            }
          }
        }
      }
    }
  }

  .sequence-step {
    background-color: $darkMediumGray;
    color: $darkBackground;
    &:hover {
      background-color: $darkMediumGrayHover;
    }
    &:active {
      background-color: $darkMediumGrayActive;
    }
    &.selected {
      background-color: $darkGreen;
      &:hover {
        background-color: $darkGreenHover;
      }
    }
    &.playing {
      background-color: $darkDarkOrange;
      &:hover {
        background-color: $darkOrange;
      }
      &.selected {
        background-color: $orange;
        color: $darkBackground;
        &:hover {
          background-color: $orangeHover;
        }
      }
    }
  }

  .knob-container {
    &.axis-knob {
      &::before {
        background: $darkBackground;
      }
    }
  }

  .channel-clock {
    border: 1px solid $darkMediumGray;
    .channel-drawer-control {
      $arrow-size: 8px;
      background-color: $darkMediumGray;
      &:hover {
        background-color: $darkMediumGrayHover;
      }
      &:active {
        background-color: $darkMediumGrayActive;
      }
      .arrow-down {
        border-top: $arrow-size - 3px solid $darkLightGray;
      }
      &.drawer-open {
        background: $darkGreen;
        &:hover {
          background: $darkGreenHover;
        }
        .arrow-down {
          border-top: $arrow-size - 3px solid $darkBackground;
        }
      }
    }
    &.channel-in-active {
      background-color: $darkestGreen;
    }
  }

  .modal-container {
    background-color: rgba(0, 0, 0, 0.85);
    .modal-window {
      background-color: $darkBackground;
      box-shadow: 0px 0px 6px $darkGreen;
    }
  }

  .mute {
    $muteGray: #39393f;
    $muteGrayHover: lighten($muteGray, 3%);
    $muteGrayActive: darken($muteGray, 3%);
    $muteDarkGray: #17171e;
    background-color: $darkMuteBackground;

    .button {
      background-color: $muteGray;
      &:hover {
        background-color: $muteGrayHover;
      }
      &:active {
        background-color: $muteGrayActive;
      }
    }

    .react-numeric-input {
      b {
        background-color: $muteGray;
        border-color: $muteGray;
        &:hover {
          background-color: $muteGrayHover;
        }
        &:active {
          background-color: $muteGrayActive;
        }
      }
      b:first-of-type {
        border-bottom-color: $darkMuteBackground;
      }
      input {
        border-color: $muteGray;
      }
    }

    .dropdown-control,
    .dropdown-arrow-wrapper {
      border-color: $muteGray;
      background-color: $muteGray;
    }

    .dropdown-menu {
      border: 1px solid $muteGray;
    }

    .dropdown-arrow-wrapper {
      border-left-color: $darkMuteBackground;
      &:hover {
        background-color: $muteGrayHover;
      }
    }

    .react-switch-bg {
      background-color: $muteGray !important;
    }

    .split-button {
      background-color: $muteGray;
      &:hover {
        background-color: $muteGrayHover;
      }
      .split-button-action {
        &:hover {
          background-color: $lightGrayHover;
        }
        &:active {
          background-color: $mediumGray;
        }
      }
      .split-button-arrow {
        $muteSplitButtonAction: darken($splitButtonAction, 4%);
        background-color: $muteSplitButtonAction;
        &:hover {
          background-color: lighten($muteSplitButtonAction, 3%);
        }
        &:active {
          background-color: darken($muteSplitButtonAction, 3%);
        }
        &.split-button-arrow-left {
          border-right: 1px solid $darkBackground;
          &::before {
            border-color: transparent $darkLightGray transparent transparent;
          }
        }
        &.split-button-arrow-right {
          &::before {
            border-color: transparent transparent transparent $darkLightGray;
          }
        }
      }
    }

    .piano-keys {
      .pitch-class {
        background-color: $muteDarkGray;
      }
      .white-key {
        background-color: $muteGray !important;
        &:hover {
          background-color: $muteGrayHover !important;
        }
        &.selected {
          background-color: $darkGreen !important;
          &:hover {
            background-color: $darkGreenHover !important;
          }
        }
        &.playing {
          background-color: $orange !important;
          &:hover {
            background-color: $orangeHover !important;
          }
        }
      }
    }

    &.channel-clock {
      .channel-clock-bottom.drawer-open .piano-drawer-border {
        border: 2px solid $darkBackground;
      }
    }

    &.channel-horizontal {
      .channel-number-background {
        background: linear-gradient(to right, rgba(28, 28, 35, 1) 5%, rgba(28, 28, 35, 0));
        height: 100%;
      }
      .channel-number {
        text-shadow: 0 0 5px $darkMuteBackground;
      }
    }
  }
}
